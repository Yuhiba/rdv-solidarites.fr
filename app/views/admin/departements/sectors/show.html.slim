- content_for(:menu_item) { 'menu-departement-sectors' }

-content_for :html_head_prepend do
  / mapbox is hard to use with webpack because of
  / https://github.com/mapbox/mapbox-gl-js/issues/1649
  <script src='https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.js'></script>
  <link href='https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.css' rel='stylesheet' />

- content_for :title do
  | Secteur #{@sector.name}

- content_for :breadcrumb do
  ol.breadcrumb.m-0
    li.breadcrumb-item
      = link_to "Secteurs", admin_departement_sectors_path(current_departement)
    li.breadcrumb-item.active
      = truncate(@sector.name, length: 20)

.row.justify-content-center
  .col-md-7
    .card
      .card-body.d-flex.justify-content-between
        ul.list-unstyled
          li
            span> Nom:
            b= @sector.name
          li
            span> Identifiant:
            b= human_id(@sector)
        - if policy([:agent, @sector]).edit?
          div= link_to edit_admin_departement_sector_path(current_departement, @sector), class: "btn btn-primary w-100" do
            i.fa.fa-edit>
            | Modifier
    .card
      - if @zones.empty?
        .card-header
          .card-title
            h5 Communes ou rues associées
        .card-body
          .alert.alert-warning.d-flex.align-items-center
            div.mr-2.h4 ⚠️
            div
              .mb-1 Aucune commune ni rue associée
              div Ce secteur ne peut pas être recherché par les usagers
          div= link_to new_admin_departement_sector_zone_path(current_departement, @sector), class: "btn btn-primary w-100" do
            i.fa.fa-plus>
            span> Ajouter une commune ou une rue
      - else
        .p-2.d-flex.align-items-center
          div.flex-grow-1.text-center= page_entries_info @zones
          div= link_to new_admin_departement_sector_zone_path(current_departement, @sector), class: "btn btn-primary" do
            i.fa.fa-plus>
            span> Ajouter une commune ou une rue
        table.table
          thead
            tr
              th Commune
              th Rue
              th
          tbody
            - @zones.each do |zone|
              tr
                td
                  = zone.city_name
                  .badge.badge-light.text-monospace= zone.city_code
                - if zone.level_street?
                  td
                    = zone.street_name
                    .badge.badge-light.text-monospace= zone.street_ban_id
                - else
                  td.text-muted Commune entière
                td
                  - if policy([:agent, zone]).destroy?
                    = link_to "retirer", admin_departement_sector_zone_path(current_departement, @sector, zone), method: :delete
        div= paginate @zones
        .mb-2.text-center
          .mb-2= page_entries_info @zones
          - if @zones.count > 5
            div= link_to( \
              "🗑 Retirer les #{@zones.total_count} communes et rues de ce secteur …", \
              admin_departement_sector_zones_path(current_departement, @sector), \
              method: :delete, \
              data: { confirm: "Êtes-vous sûr de vouloir retirer ces #{@zones.total_count} communes et rues ?" }, \
              class: 'btn btn-danger' \
            )
  .col-md-5
    .card
      .card-header
        .card-title
          h5 Organisations & Agents attribués
      .card-body
        - if @sector.attributions.any?
          ul.mb-3.pl-2
            - @sector.attributions.to_a.group_by(&:organisation).each do |organisation, attributions|
              - if attributions.count == 1 && attributions.first.level_organisation?
                li
                  .d-flex.justify-content-between.mb-2
                    div= "Organisation entière #{organisation.name}"
                    div.ml-2>= link_to "Retirer", admin_departement_sector_attribution_path(current_departement, @sector, attributions.first), method: :delete
              - elsif attributions.all?(&:level_agent?)
                li.mb-2
                  div.mb-1= "Agents dans l'organisation #{organisation.name} :"
                  ul.pl-2
                    - attributions.each do |attribution|
                      li
                        .d-flex.justify-content-between.mb-1
                          div= attribution.agent.full_name_and_service
                          div.ml-2>= link_to "Retirer", admin_departement_sector_attribution_path(current_departement, @sector, attribution), method: :delete
                    li.mb-3= link_to \
                      "Attribuer un autre agent de #{organisation.name.truncate(10)}", \
                      new_admin_departement_sector_attribution_path( \
                        current_departement, \
                        @sector, \
                        level: "agent", \
                        organisation_id: organisation.id \
                    )

        - else
          .alert.alert-warning.d-flex.align-items-center
            div.mr-2.h4 ⚠️
            div
              .mb-1 Aucune organisation ni agent attribués
              div Ce secteur ne renvoie pas de disponibilités
        = link_to new_admin_departement_sector_attribution_path(current_departement, @sector, level: "organisation"), class: "btn btn-primary w-100" do
          i.fa.fa-plus>
          | Attribuer une organisation ou un agent
      .card-footer
        .text-muted Lorsqu'un usager cherche une adresse couverte par ce secteur, les disponibilités des organisations ou des agents attribués lui seront proposées

    .card
      #zones-map.small[
        data-center-query="#{@sector&.zones&.first&.city_name}, #{current_departement}"
      ]
      #zones-map-small-legend
        .hovered-city-container
          #js-hovered-city>
        ul.list-unstyled
          li.mb-1[
            data-color=sector_zone_color(@sector)
            data-city-codes-json={colors: @sector.zones.pluck(:city_code)}.to_json
            class='js-legend-organisation'
          ]
